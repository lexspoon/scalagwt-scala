public class LTry; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public V; simpleTry() {
    try {
      
    } catch(Ljava/lang/Throwable; ex$1) {
      Ljava/lang/Throwable; temp1 = ex$1;
      if (temp1.<instanceof>(Ljava/lang/Exception;))
        {
          Ljava/lang/Exception; temp2 = temp1.<cast>(Ljava/lang/Exception;);
          Ljava/lang/Exception; x = temp2;
          if (this.(LTry;::gd1$1(Ljava/lang/Exception;)Z;)(x))
            {
              Ljava/lang/Exception; $1$;
              body$percent01: while(true) {
                Lscala/Predef$;.MODULE$.(Lscala/Predef$;::println(Ljava/lang/Object;)V;)(("first case " + x));
                break;
              }
            }
          else
            {
              Lscala/Predef$;.MODULE$.(Lscala/Predef$;::println(Ljava/lang/Object;)V;)(("second case " + temp2));
            }
        }
      else
        {
          throw ex$1;
        }
    }
  }
  
  public V; typedWildcardTry() {
    try {
      
    } catch(Ljava/lang/ClassCastException; $WILDCARD) {
      
    }
  }
  
  public V; wildcardTry() {
    try {
      
    } catch(Ljava/lang/Throwable; $WILDCARD) {
      
    }
  }
  
  public V; tryPlusFinally() {
    try {
      
    } finally {
      Lscala/Predef$;.MODULE$.(Lscala/Predef$;::println(Ljava/lang/Object;)V;)("finally");
    }
  }
  
  private final Z; gd1$1(Ljava/lang/Exception; x$1) {
    return Lscala/runtime/BoxesRunTime;.(Lscala/runtime/BoxesRunTime;::equals(Ljava/lang/Object;Ljava/lang/Object;)Z;)(x$1.(Ljava/lang/Throwable;::getMessage()Ljava/lang/String;)(), "test");
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
