public class LArrays; extends Ljava/lang/Object; implements Lscala/ScalaObject; {
  
  public V; values() {
    Lscala/collection/immutable/List; x = Lscala/collection/immutable/List$;.MODULE$.(Lscala/collection/immutable/List$;::apply(Lscala/collection/Seq;)Lscala/collection/immutable/List;)(Lscala/Predef$;.MODULE$.(Lscala/LowPriorityImplicits;::wrapIntArray(I;[)Lscala/collection/mutable/WrappedArray;)(<I;>{0, 1}));
  }
  
  public V; newArray() {
    Ljava/lang/Object;[[ x = new Ljava/lang/Object;[1][];
  }
  
  public Ljava/lang/Object; returnOneArray(Lscala/reflect/ClassManifest; evidence$1) {
    return Lscala/Array$;.MODULE$.(Lscala/Array$;::ofDim(I;Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(1, evidence$1);
  }
  
  public Ljava/lang/Object; getOneArray(Lscala/reflect/ClassManifest; evidence$2) {
    return this.(LArrays;::returnOneArray(Lscala/reflect/ClassManifest;)Ljava/lang/Object;)(evidence$2);
  }
  
  public Ljava/lang/Object;[ returnTwoArray(Lscala/reflect/ClassManifest; evidence$3) {
    return Lscala/Array$;.MODULE$.(Lscala/Array$;::ofDim(I;I;Lscala/reflect/ClassManifest;)Ljava/lang/Object;[)(1, 1, evidence$3);
  }
  
  public Ljava/lang/Object;[ getTwoArray(Lscala/reflect/ClassManifest; evidence$4) {
    return this.(LArrays;::returnTwoArray(Lscala/reflect/ClassManifest;)Ljava/lang/Object;[)(evidence$4);
  }
  
  public I; arrayLength(I;[ x) {
    return x.<length>;
  }
  
  public this() {
    (Ljava/lang/Object;::super()V;)();
  }
}
